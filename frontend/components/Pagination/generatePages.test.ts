import generatePages from './generatePages'

test('should generate pages when total pages <= visible pages', () => {
  expect(generatePages(1, 1, 7)).toEqual([])
  expect(generatePages(2, 1, 7)).toEqual([1, 2])
  expect(generatePages(3, 1, 7)).toEqual([1, 2, 3])
  expect(generatePages(4, 1, 7)).toEqual([1, 2, 3, 4])
  expect(generatePages(5, 1, 7)).toEqual([1, 2, 3, 4, 5])
  expect(generatePages(6, 1, 7)).toEqual([1, 2, 3, 4, 5, 6])
  expect(generatePages(7, 1, 7)).toEqual([1, 2, 3, 4, 5, 6, 7])
  expect(generatePages(7, 2, 7)).toEqual([1, 2, 3, 4, 5, 6, 7])
  expect(generatePages(7, 3, 7)).toEqual([1, 2, 3, 4, 5, 6, 7])
  expect(generatePages(7, 4, 7)).toEqual([1, 2, 3, 4, 5, 6, 7])
  expect(generatePages(7, 5, 7)).toEqual([1, 2, 3, 4, 5, 6, 7])
  expect(generatePages(7, 6, 7)).toEqual([1, 2, 3, 4, 5, 6, 7])
  expect(generatePages(7, 7, 7)).toEqual([1, 2, 3, 4, 5, 6, 7])
})

test('should generate pages with links when total pages > visible pages', () => {
  expect(generatePages(15, 1, 7)).toEqual([1, 2, 3, 4, 5, 7, 15])
  expect(generatePages(15, 2, 7)).toEqual([1, 2, 3, 4, 5, 7, 15])
  expect(generatePages(15, 3, 7)).toEqual([1, 2, 3, 4, 5, 7, 15])
  expect(generatePages(15, 4, 7)).toEqual([1, 2, 3, 4, 5, 7, 15])
  expect(generatePages(15, 5, 7)).toEqual([1, 2, 4, 5, 6, 8, 15])
  expect(generatePages(15, 6, 7)).toEqual([1, 3, 5, 6, 7, 9, 15])
  expect(generatePages(15, 7, 7)).toEqual([1, 4, 6, 7, 8, 10, 15])
  expect(generatePages(15, 8, 7)).toEqual([1, 5, 7, 8, 9, 11, 15])
  expect(generatePages(15, 9, 7)).toEqual([1, 6, 8, 9, 10, 12, 15])
  expect(generatePages(15, 10, 7)).toEqual([1, 7, 9, 10, 11, 13, 15])
  expect(generatePages(15, 11, 7)).toEqual([1, 8, 10, 11, 12, 14, 15])
  expect(generatePages(15, 12, 7)).toEqual([1, 9, 11, 12, 13, 14, 15])
  expect(generatePages(15, 13, 7)).toEqual([1, 9, 11, 12, 13, 14, 15])
  expect(generatePages(15, 14, 7)).toEqual([1, 9, 11, 12, 13, 14, 15])
  expect(generatePages(15, 15, 7)).toEqual([1, 9, 11, 12, 13, 14, 15])
})
