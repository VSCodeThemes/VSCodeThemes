language: node_js
node_js:
  - 8.10.0
services:
  - docker
before_install:
  # Install yarn.
  - curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
  - sudo apt-key adv --keyserver pgp.mit.edu --recv D101F7899D41F3C3
  - echo "deb http://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
  - sudo apt-get update -qq
  - sudo apt-get install -y -qq yarn
  # Install terraform.
  - curl -fSL "https://releases.hashicorp.com/terraform/0.11.2/terraform_0.11.2_linux_amd64.zip" -o terraform.zip
  - sudo unzip terraform.zip -d /opt/terraform
  - sudo ln -s /opt/terraform/terraform /usr/bin/terraform
  - rm -f terraform.zip
  # Install Heroku CLI.
  - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  # Install AWS CLI.
  - pip install --user awscli
  - export PATH=$PATH:$HOME/.local/bin
  # Set branch from travis build env var.
  - export BRANCH=$TRAVIS_BRANCH
  # Get env file for the current branch from s3.
  - yarn get-env
cache:
  directories:
    - "$HOME/.yarn-cache"
install:
  - yarn install --frozen-lockfile
script:
  # Lint all packages.
  - yarn lint
  # We need to run the build before the tests because the types
  # package needs to be compiled first.
  - yarn build
  # Run all tests.
  - yarn test
  # Package backend lambdas.
  - yarn package
  # Generate the terraform plan.
  - yarn plan
deploy:
  - provider: script
    skip_cleanup: true
    script: yarn deploy
    on:
      branch: production
  - provider: script
    skip_cleanup: true
    script: yarn deploy
    on:
      branch: dev
